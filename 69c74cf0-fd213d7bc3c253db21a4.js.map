{"version":3,"file":"69c74cf0-fd213d7bc3c253db21a4.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/components/AnimationTextBlock.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { HeroButtons } from \"@adobe/gatsby-theme-aio/src/components/Hero\";\nimport { Media } from \"@adobe/gatsby-theme-aio/src/components/Media\";\nimport PropTypes from \"prop-types\";\nimport {\n  layoutColumns,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH\n} from \"@adobe/gatsby-theme-aio/src/utils\";\nimport classNames from \"classnames\";\nimport \"@spectrum-css/typography\";\nimport SpringImage from './springweb'\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0,\n};\n\nconst MIN_TABLET_SCREEN_WIDTH = '1023px'\n\nconst mediaCSS = css`\n  & {\n    display: inline;\n    width: ${layoutColumns(6)};\n    box-sizing: border-box;\n    padding: var(--spectrum-global-dimension-size-200);\n\n    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n\n          & li {\n            display: flex;\n            border-right: 1px solid var(--spectrum-global-color-gray-300);\n            height: var(--spectrum-global-dimension-size-600);\n            margin-right: var(--spectrum-global-dimension-size-150);\n          }\n\n          & li:last-of-type {\n            padding-right: 0;\n            border-right: none;\n          }\n\n          .gatsby-resp-image-wrapper {\n            position: relative;\n            width: var(--spectrum-global-dimension-size-800) !important;\n          }\n\n          .gatsby-resp-image-image {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            object-fit: contain;\n          }\n        `,\n      })\n    : null;\n\nconst Links = ({ links, isCentered, isLinksGroups=false }) =>\n  links\n    ? cloneElement(links, {\n        css: css`\n          list-style: none;\n          padding: 0;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n          ${!isLinksGroups? \"\" : \"flex-wrap: wrap;\"}\n          margin-top: ${isCentered || isLinksGroups\n            ? \"var(--spectrum-global-dimension-size-200) !important;\"\n            : \"var(--spectrum-global-dimension-size-600) !important;\"};\n          & li {\n            display: flex;\n            align-items: center;\n            ${isLinksGroups \n              ? `border-radius: 10px; \n                border:solid 1.8px;\n                margin-right: var(--spectrum-global-dimension-size-200);\n                height: var(--spectrum-global-dimension-size-300);\n                margin-top: var(--spectrum-global-dimension-size-100);\n                background-color: #F7F7F7;\n                `\n              : \"height: var(--spectrum-global-dimension-size-400)\"};\n          }\n\n          & li a {\n            white-space: nowrap;           \n            ${isLinksGroups \n              ? `margin: var(--spectrum-global-dimension-size-100); \n              color: currentColor;\n              text-decoration: none;\n              font-size: var(--spectrum-global-dimension-size-175);` \n              : \"margin-right: var(--spectrum-global-dimension-size-600);\"};\n          }\n\n          & li:last-of-type a {\n            margin-right: ${isLinksGroups ? \"var(--spectrum-global-dimension-size-100)\": \"0\"}\n          }\n\n          & li:hover{\n            ${isLinksGroups  ?\n            `background-color: var(--spectrum-button-primary-m-background-color-hover, var(--spectrum-global-color-gray-800));\n            border-color: var(--spectrum-button-primary-m-border-color-hover, var(--spectrum-global-color-gray-800));            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));`\n            : \"\"}\n          }        \n          & li:hover a{\n            ${isLinksGroups  ? `\n            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));\n            text-decoration: none;`\n            : \"\"}\n          }\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-wrapper {\n            width: var(--spectrum-global-dimension-size-400) !important;\n            margin-left: 0 !important;\n            margin-right: var(--spectrum-global-dimension-size-150) !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: contain;\n          }\n          \n          @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n            flex-direction: ${isLinksGroups ? \"initial\" : \"column\"};\n            align-items: ${isCentered ? \"center\" : \"left\"};          \n\n            li {\n              margin-top: var(--spectrum-global-dimension-size-100);              \n            }\n\n            li a {\n              ${isLinksGroups  \n                ? \"font-size: var(--spectrum-global-dimension-size-130);` \" \n                : `margin-right: 0;`\n              }\n            }\n          }\n\n          @media screen and (max-width: 767px) {\n            ${isLinksGroups  ? `width: min-content` : \"\" }\n          }\n        `,\n      })\n    : null;\n\nconst AnimationTextBlock = ({\n  className,\n  heading,\n  subHeading,\n  textcontent,\n  links,\n  buttons,\n  linksGroups,\n  icons,\n  image,\n  assetImg,\n  video,\n  theme = \"lightest\",\n  width = \"100%\",\n  isCentered = false,\n  primaryOutline = false,\n  headerElementType = \"h3\",\n  imageOnly = false,\n  imgWidth = \"50%\",\n  isPrimaryBtn=false,\n  variantsTypePrimary='accent',\n  variantsTypeSecondary='secondary',\n  variantStyleFill = \"fill\",\n  variantStyleOutline = \"outline\",\n  hasCodeBlock = false,\n  homeZigZag = false,\n  isbuttonGroups = false,\n  imagearray=[],\n  videoSrcUrl=\"\",\n  isVideoReversed=false,\n  ...props\n}) => {\n  const Element = headerElementType;\n\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === \"33%\") {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== \"undefined\") {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n    if (width !== \"100%\") {\n      isCentered = true;\n    }\n\n  \n    const isReversed =\n      props.slots.endsWith(\"image\") || props.slots.endsWith(\"video\") || isVideoReversed;\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          width: 100%;\n          background: var(--spectrum-global-color-gray-100);\n        `}\n      >\n        <div\n          css={css`\n            width: ${DESKTOP_SCREEN_WIDTH};\n            box-sizing: border-box;\n            margin: auto;\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              width: 100%;\n\n              // & > div {\n              //   flex-direction: column !important;\n              // }\n            }\n          `}\n        >\n          <div\n            css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: ${imageOnly\n                ? \"column\"\n                : isReversed\n                ? \"row-reverse\"\n                : \"row\"};\n\n              @media screen and (max-width: ${MIN_TABLET_SCREEN_WIDTH}) {\n                flex-direction: column;\n              }\n            `}\n          >\n            {imagearray.length >0  &&\n            <p className=\"spectrum-Body spectrum-Body--sizeM css-1wz4ws2-css-Paragraph\"><span className=\"gatsby-resp-image-wrapper\" >\n            <span className=\"gatsby-resp-image-background-image quickActionCodeSnippetBGImg\" ></span>\n                <picture style={{display:\"none\"}}>\n                  <img className=\"gatsby-resp-image-image\" src={image} alt=\"EMPTY_ALT\" title=\"EMPTY_ALT\" loading=\"lazy\"  />\n                </picture>\n              </span>\n                <SpringImage slides={imagearray} />\n              </p>\n              }\n             \n            { video && <Media css={mediaCSS} video={video} /> }\n            \n            { videoSrcUrl !== \"\" && \n            <div className=\"reizeQuickActionVideo\">\n              <video name=\"media_resize\" id=\"resize_Quick_Action_Id\" loop className=\"resizeQuickActionViedo\" type=\"video/mp4\" preload=\"auto\" autoPlay muted>\n                <source src={videoSrcUrl} type=\"video/mp4\" />\n              </video>\n            </div>\n            }\n            {!imageOnly && <div\n              css={css`\n                ${hasCodeBlock ?`width: 70%;` : `width: 50%;`}\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                text-align: left;\n                box-sizing: border-box;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: var(--spectrum-global-dimension-size-400) 0;\n                }\n              `}\n            >\n              <Icons icons={icons} isCentered={isCentered} />\n\n              {heading && (\n                <Element\n                  className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                  css={css`\n                    margin-top: 0 !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n\n                    & + p {\n                      margin-top: 0 !important;\n                    }\n                  `}\n                >\n                  {heading}\n                </Element>\n              )}\n              {subHeading && !linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                font-size: var(\n                  --spectrum-global-dimension-size-225\n                ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading}\n              </h3>\n            )}\n              <p class=\"spectrum-Body spectrum-Body--sizeM css-tq6n67-Paragraph\">{textcontent}</p>\n              \n\n              {subHeading && linksGroups && (\n              <h3\n              className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;                  \n                  margin-top: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n              {linksGroups && (\n                <Links links={linksGroups} isCentered={isCentered} isLinksGroups />\n              )}\n\n              <HeroButtons\n                buttons={buttons}\n                styles={[variantStyleFill, variantStyleOutline]}\n                variants={[variantsTypePrimary,variantsTypeSecondary]}\n                heading={homeZigZag ? heading?.props?.children : ''}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n\n              <Links links={links} isCentered={isCentered} />\n            </div> }\n          </div>\n        </div>\n      </section>\n    );\n  }\n\nAnimationTextBlock.propTypes = {\n  heading: PropTypes.string,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  linksGroups: PropTypes.element,\n  image: PropTypes.string,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf([\"100%\", \"50%\", \"33%\", \"25%\"]),\n  isCentered: PropTypes.bool,\n  headerElementType: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n  imageOnly: PropTypes.bool,\n  primaryOutline: PropTypes.bool,\n  hasCodeBlock: PropTypes.bool,\n  imgWidth: PropTypes.string,\n  homeZigZag: PropTypes.bool,\n  isbuttonGroups: PropTypes.bool,\n  imagearray: PropTypes.array,\n  videoSrcUrl: PropTypes.element,\n  isVideoReversed: PropTypes.bool\n};\n\nexport { AnimationTextBlock };\n"],"names":["counter","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","icons","isCentered","cloneElement","Links","links","isLinksGroups","AnimationTextBlock","className","heading","subHeading","textcontent","buttons","linksGroups","image","video","assetImg","theme","width","primaryOutline","headerElementType","imageOnly","imgWidth","isPrimaryBtn","variantsTypePrimary","variantsTypeSecondary","variantStyleFill","variantStyleOutline","hasCodeBlock","homeZigZag","isbuttonGroups","imagearray","videoSrcUrl","isVideoReversed","props","Element","initColumns","parseFloat","toFixed","columns","useState","useEffect","isReversed","slots","endsWith","classNames","DESKTOP_SCREEN_WIDTH","length","style","display","src","alt","title","loading","slides","name","id","loop","type","preload","autoPlay","muted","class","children","styles","variants"],"sourceRoot":""}