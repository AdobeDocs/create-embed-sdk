{"version":3,"file":"03d90930-b05fecfe98bfd0fe4cf6.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/@adobe/gatsby-theme-aio/components/Hero/index.js"],"sourcesContent":["\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, Children, useContext,useEffect, useState } from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from \"@adobe/gatsby-theme-aio/src/components/AnchorButton\";\nimport \"@spectrum-css/typography\";\nimport PropTypes from \"prop-types\";\nimport {\n  getElementChild,\n  cloneChildren,\n  TABLET_SCREEN_WIDTH,\n  DESKTOP_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME,\n  findSelectedTopPage,\n  rootFixPages,\n  rootFix,\n  findSelectedTopPageMenu,\n} from \"@adobe/gatsby-theme-aio/src/utils\";\nimport Context from \"@adobe/gatsby-theme-aio/src/components/Context\";\nimport { Breadcrumbs } from \"@adobe/gatsby-theme-aio/src/components/Breadcrumbs\";\nimport classNames from \"classnames\";\n\nimport lottie from 'lottie-web';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst getAriaLabel = (label, heading='') => {\n  const labelVal = label === 'Learn more' && heading !=='' ? `${label} about ${heading}` : `${label}`;\n  return labelVal;\n}\n\nconst HeroButtons = ({ buttons, styles = ['fill', 'outline'], variants = ['accent', 'secondary'], heading='', className }) =>\n\n  buttons ? (\n    <div>\n      <div\n        className={className}\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--spectrum-global-dimension-size-200);\n        `}>\n        {Children.map(buttons.props.children, (item, i) => {\n          let style = styles[0];\n          let variant = variants[0];\n\n          if (i > 0) {\n            style = styles[1];\n            variant = variants[1];\n          }\n\n          const link = getElementChild(item);\n\n          return (\n            <div key={i}>\n              <AnchorButton aria-label={getAriaLabel(link.props.children, heading)} href={link.props.href} variant={variant} style={style}>\n                <span class=\"spectrum-Button-label\">{link.props.children}</span>\n              </AnchorButton>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles, className }) =>\n  image\n    ? cloneElement(image, {\n      children: cloneChildren(image.props.children, setImageLoading),\n      className: className,\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n    })\n    : null;\n\nconst HeroTexts = ({ texts, customLayout }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          padding: 0 var(--spectrum-global-dimension-size-115);\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant, customLayout }) =>\n  heading\n    ? cloneElement(heading, {\n      // force h1 to support gdocs\n      mdxType: 'h1',\n      originalType: 'h1',\n      className:\n        (variant === 'default' || customLayout) ? customLayout ? 'spectrum-Heading--sizeXL spectrum-Heading--serif' : 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n      css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n    })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  assetsImg,\n  variant = 'default',\n  containerHeight = 1000,\n  width = DESKTOP_SCREEN_WIDTH,\n  customLayout = false,\n  primaryOutline = false,\n  isPrimaryBtn=false,\n  variantsTypePrimary='accent',\n  variantsTypeSecondary='secondary',\n  animationVideo=\"\",\n  videoSrcUrl=\"\",\n  svgEmbded=\"\",\n  isQuickAction=false,\n  imagearray=[],\n  isCustomAnimation=false,\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n  const [showVideo, setShowVideo] = useState(false);\n  \n\n\n  useEffect(()=>{\n    \n    if ( animationVideo ) {\n      lottie.loadAnimation({\n        container: document.querySelector(\"#svgContainer\"), \n        renderer: \"svg\",\n        loop: true,\n        autoplay: true,\n        animationData: animationVideo\n      });\n    }\n\n    if( videoSrcUrl ) {\n    \n      let timer1 = setTimeout(() => {\n        setShowVideo(true)\n      } ,  4200);\n\n      // this will clear Timeout\n      // when component unmount like in willComponentUnmount\n      // and show will not change to true\n      return () => {\n        clearTimeout(timer1);\n      };\n    }\n  },[animationVideo, videoSrcUrl])\n  useEffect(() => {\n    \n    const videoPlayer = document.getElementById(\"playAnimatedVideo\");\n    if (!videoPlayer) return\n    if( showVideo) {\n      videoPlayer.play()\n      setTimeout(() => {\n        setShowVideo(false)\n      } ,  21000);\n    }\n    else {\n      videoPlayer.pause()\n      setTimeout(() => {\n        setShowVideo(true)\n      } ,  3500);\n    }\n\n  }, [showVideo])\n\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(selectedTopPage.href) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-1800))';\n    if (variant === 'fullwidth' && customLayout) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            width: 100%;\n            background: ${background ?? \"var(--spectrum-global-color-gray-50)\"};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              .spectrum-Heading--sizeXL {\n                font-size: var(--spectrum-alias-heading-l-text-size);\n              }\n            }\n          `}\n        >\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              top: 0;\n              bottom: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: flex-end;\n              text-align: center;\n\n              h1 {\n                padding: var(--spectrum-global-dimension-size-500) var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-0) !important;\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                padding: 0 !important;\n              }\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-250);\n\n                h1 {\n                  padding: var(--spectrum-global-dimension-size-400) var(--spectrum-global-dimension-size-200) var(--spectrum-global-dimension-size-0) !important;\n                }\n              }\n            `}\n          >\n            {heading && (\n              <HeroHeading\n                heading={heading}\n                variant={variant}\n                customLayout={customLayout}\n              />\n            )}\n\n            <HeroTexts texts={props} />\n\n            {buttons ? (\n              <HeroButtons\n                buttons={buttons}\n                styles={['fill', 'outline']}\n                variants={[variantsTypePrimary,variantsTypeSecondary]}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n              />\n            )}\n            <div className={assetsImg?.props?.children}/>\n          </div>\n        </section>\n      )\n    } else if(variant === 'video' && animationVideo){\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n            <div css={css`\n              @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n                position: relative;\n                max-width:${DESKTOP_SCREEN_WIDTH}\n                margin:auto;\n              }\n            `}>\n              <div css={css`\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <div id=\"svgContainer\"></div>\n              </div>\n\n              <div\n                css={css`\n                  display: flex;\n                  height: 100%;\n                  max-width: ${width};\n                  margin: auto;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    display: inline;\n                  }\n              `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center !important;\n                    position: absolute;\n                    padding: 0;\n                    top: 0;\n                    text-align: left;\n                    width: 30%;\n                    align-item:center;\n                    bottom: 0;\n                    box-sizing: border-box;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      padding: 0 !important;\n                      width: 100% !important;\n                      position: initial !important;\n                    }\n\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      padding: 0 var(--spectrum-global-dimension-size-100);\n                      width:100% !important;\n                      top: 20px !important;\n                      position: initial !important;\n                      h1 {\n                        padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                        font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                      }\n                    }\n                `}>\n\n                  {heading && (\n                    <HeroHeading\n                      heading={heading}\n                      variant={variant}\n                      customLayout={customLayout}\n                    />\n                  )}\n\n                  <HeroTexts texts={props} />\n\n                  <HeroButtons\n                    buttons={buttons}\n                    quiets={[false]}\n                    variants={[\"primary\", \"overBackground\"]}\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-400);\n                    `}\n                  />\n                </div>\n                <div\n                  css={css`\n                    max-width: ${width};\n                    margin: auto;\n                    display: none;\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      display: inline;\n                    }\n                `}>\n                <div className={assetsImg?.props?.children}/>\n              </div>\n            </div>\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth' && customLayout ) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-225);\n              box-sizing: border-box;\n            }\n        `}>\n          <div css={css`\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n              display: flex;\n              justify-content: space-between;\n              position: relative;\n              max-width:${DESKTOP_SCREEN_WIDTH};\n              margin:auto;\n            }\n          `}>            \n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center !important;\n                // position: absolute;\n                padding: 0;\n                top: 0;\n                text-align: left;\n                width: 36%;\n                align-item:center;\n                bottom: 0;\n                box-sizing: border-box;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding: 0 !important;\n                  width: 100% !important;\n                  position: initial !important;\n                }\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  padding: 0 var(--spectrum-global-dimension-size-100);\n                  width:100% !important;\n                  top: 20px !important;\n                  position: initial !important;\n                  h1 {\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                  }\n                }\n            `}>                    \n            {icon &&\n              cloneElement(icon, {\n                children: cloneChildren(icon.props.children, setImageLoading),\n                css: css`\n                  height: var(--spectrum-global-dimension-size-400);\n                  width: var(--spectrum-global-dimension-size-3600);\n                  margin-top: 0 !important;\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width: var(--spectrum-global-dimension-size-3000) !important;\n                  }\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n              })}\n\n              \n\n                {heading && (\n                  <HeroHeading\n                    heading={heading}\n                    variant={variant}\n                    customLayout={customLayout}\n                  />\n                )}\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                style={[\"outine\"]}\n              />\n            </div>\n            </div>\n          \n        </section>\n      );\n    } else if (variant === 'fullwidth' && !videoSrcUrl) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['accent', 'secondary']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n            <div className={assetsImg?.props?.children}/>\n          </div>\n        </section>\n      );    \n    } else if (variant === 'halfwidth' && isCustomAnimation) {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n             \n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `} className=\"bgCodeAssetAnima\">\n              <div className=\"imgRemoveLayer1\">\n                <div className=\"imgRemoveLayer2\">\n                  <img alt=\"imgnotfound\" src={imagearray[0]}></img>\n                </div>\n                <div className=\"quickActionImage1\">\n                  <img alt=\"imgnotfound\" src={imagearray[2]}></img>\n                </div>\n                <div className=\"quickActionImage2\">\n                  <img alt=\"imgnotfound\" src={imagearray[6]}></img>\n                </div>\n              </div>\n              <div className=\"resizeCropImage\">\n                <div style={{opacity: 0}}>\n                  <img alt=\"imgnotfound\" src={imagearray[3]}></img>\n                </div>\n                <div style={{opacity: 0}}>\n                    <img alt=\"imgnotfound\" src={imagearray[3]}></img>\n                </div>\n                <div>\n                  <img alt=\"imgnotfound\" src={imagearray[3]}></img>\n                </div>\n                <div>\n                  <img class=\"cropImg\" alt=\"imgnotfound\" src={imagearray[4]}></img>\n                  <div className=\"quickActionImage3\">\n                      <img alt=\"imgnotfound\" src={imagearray[1]}></img>\n                    </div>\n                    <div className=\"quickActionImage4\">\n                      <img alt=\"imgnotfound\" src={imagearray[5]}></img>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n             \n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </div>\n        </section>\n      );\n    } else if ( variant === 'fullwidth' && videoSrcUrl && !isQuickAction) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-225);\n              box-sizing: border-box;\n            }\n        `}>\n          <div css={css`\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n              display: flex;\n              justify-content: space-between;\n              position: relative;\n              max-width:${DESKTOP_SCREEN_WIDTH};\n              margin:auto;\n            }\n          `}>            \n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center !important;\n                // position: absolute;\n                padding: 0;\n                top: 0;\n                text-align: left;\n                width: 36%;\n                align-item:center;\n                bottom: 0;\n                box-sizing: border-box;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding: 0 !important;\n                  width: 100% !important;\n                  position: initial !important;\n                }\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  padding: 0 var(--spectrum-global-dimension-size-100);\n                  width:100% !important;\n                  top: 20px !important;\n                  position: initial !important;\n                  h1 {\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                  }\n                }\n            `}>                    \n            {icon &&\n              cloneElement(icon, {\n                children: cloneChildren(icon.props.children, setImageLoading),\n                css: css`\n                  height: var(--spectrum-global-dimension-size-400);\n                  width: var(--spectrum-global-dimension-size-3600);\n                  margin-top: 0 !important;\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width: var(--spectrum-global-dimension-size-3000) !important;\n                  }\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n              })}\n\n              \n\n                {heading && (\n                  <HeroHeading\n                    heading={heading}\n                    variant={variant}\n                    customLayout={customLayout}\n                  />\n                )}\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                style={[\"outine\"]}\n              />\n            </div>\n            {videoSrcUrl && \n              <div>\n                <div className=\"video\" style={showVideo ? {opacity:0.4} :  {opacity:1} } >\n                  <div className=\"arrow\" >\n                    { !showVideo && svgEmbded}\n                    { showVideo && <div style={{opacity:0}}>{svgEmbded}</div>}\n                  </div>\n\n                </div>\n                <video className=\"autoPlayVideo\" id=\"playAnimatedVideo\" style={!showVideo ? {opacity:0} :  {opacity:1} } name=\"media\" playsInline muted=\"true\">\n                    <source src={videoSrcUrl} type=\"video/mp4\" />\n                </video>\n              </div>\n            }\n            </div>\n        </section>\n      );\n    }  else if ( variant === 'fullwidth' && videoSrcUrl && isQuickAction ) {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            overflow: hidden;\n            height: auto;\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-225);\n              box-sizing: border-box;\n            }\n        `}>\n          <div css={css`\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\n              display: flex;\n              justify-content: space-between;\n              position: relative;\n              max-width:${DESKTOP_SCREEN_WIDTH};\n              margin:auto;\n            }\n          `}>            \n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center !important;\n                // position: absolute;\n                padding: 0;\n                top: 0;\n                text-align: left;\n                width: 36%;\n                align-item:center;\n                bottom: 0;\n                box-sizing: border-box;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding: 0 !important;\n                  width: 100% !important;\n                  position: initial !important;\n                }\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  padding: 0 var(--spectrum-global-dimension-size-100);\n                  width:100% !important;\n                  top: 20px !important;\n                  position: initial !important;\n                  h1 {\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\n                  }\n                }\n            `}>                    \n            {icon &&\n              cloneElement(icon, {\n                children: cloneChildren(icon.props.children, setImageLoading),\n                css: css`\n                  height: var(--spectrum-global-dimension-size-400);\n                  width: var(--spectrum-global-dimension-size-3600);\n                  margin-top: 0 !important;\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width: var(--spectrum-global-dimension-size-3000) !important;\n                  }\n                  .gatsby-resp-image-wrapper {\n                    max-width: none !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                  }\n\n                  .gatsby-resp-image-image {\n                    height: 100%;\n                    object-fit: contain;\n                  }\n                `\n              })}\n\n              \n\n                {heading && (\n                  <HeroHeading\n                    heading={heading}\n                    variant={variant}\n                    customLayout={customLayout}\n                  />\n                )}\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\n                style={[\"outine\"]}\n              />\n            </div>\n            <div className=\"quickActionVideo\">  \n              <video className=\"autoQuickPlayVideo\" id=\"playAnimatedVideoQuickAction\" loop name=\"media2\" muted=\"true\" playsInline autoPlay>\n                  <source src={videoSrcUrl} type=\"video/mp4\" />\n              </video>\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string,\n  customLayout: PropTypes.bool,\n  assetsImg:PropTypes.element,\n  animationVideo: PropTypes.element,\n  videoSrcUrl: PropTypes.string,\n  svgEmbded: PropTypes.element,\n  isQuickAction: PropTypes.bool,\n  imagearray: PropTypes.array,\n  isCustomAnimation:  PropTypes.bool\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  quiets: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","_child$props","props","mdxType","cloneElement","loading","getAriaLabel","label","heading","_ref15","name","styles","HeroButtons","_ref16","buttons","_ref16$styles","_ref16$variants","variants","_ref16$heading","className","___EmotionJSX","css","Children","children","item","i","style","variant","link","getElementChild","key","AnchorButton","href","class","HeroImage","_ref17","image","cloneChildren","HeroTexts","_ref18","texts","customLayout","Object","keys","filter","startsWith","map","textKey","MOBILE_SCREEN_WIDTH","_ref14","HeroHeading","_ref19","originalType","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","Hero","_ref20","background","_ref20$theme","theme","icon","assetsImg","_ref20$variant","_ref20$width","containerHeight","width","DESKTOP_SCREEN_WIDTH","_ref20$customLayout","_ref20$variantsTypePr","primaryOutline","isPrimaryBtn","variantsTypePrimary","_ref20$variantsTypeSe","variantsTypeSecondary","_ref20$animationVideo","animationVideo","_ref20$videoSrcUrl","videoSrcUrl","_ref20$svgEmbded","svgEmbded","_ref20$isQuickAction","isQuickAction","_ref20$imagearray","imagearray","_ref20$isCustomAnimat","isCustomAnimation","_objectWithoutPropertiesLoose","_excluded","_useContext","useContext","Context","siteMetadata","location","_useState","useState","showVideo","setShowVideo","useEffect","lottie","container","document","querySelector","renderer","loop","autoplay","animationData","timer1","setTimeout","clearTimeout","videoPlayer","getElementById","play","pause","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","classNames","hidden","title","Breadcrumbs","DEFAULT_HOME","_objectSpread","withPrefix","_assetsImg$props","_assetsImg$props2","_assetsImg$props3","height","TABLET_SCREEN_WIDTH","id","quiets","isVariant","alt","src","opacity","playsInline","muted","type","autoPlay"],"sourceRoot":""}