{"version":3,"file":"3e68f330-0530891cc971a45d378d.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/@adobe/gatsby-theme-aio/components/Carousel/index.js"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nimport React from \"react\";\nimport { css } from \"@emotion/react\";\nimport \"@spectrum-css/typography\";\nimport PropTypes from \"prop-types\";\nimport {\n  TABLET_SCREEN_WIDTH,\n  layoutColumns,\n  MOBILE_SCREEN_WIDTH,\n} from \"@adobe/gatsby-theme-aio/src/utils\";\n\nimport { DESKTOP_SCREEN_WIDTH } from \"@adobe/gatsby-theme-aio/src/utils\";\n\nimport {\n  HeroButtons,\n  HeroImage,\n} from \"../Hero\";\nimport classNames from \"classnames\";\nimport { Swiper, SwiperSlide, } from \"swiper/react\";\nimport SwiperCore, { Pagination, Autoplay, Navigation } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\n\nSwiperCore.use([Autoplay, Pagination, Navigation]);\n\nconst smallMobileView = \"375px\";\nconst MIN_MOBILE_SCREEN_WIDTH = \"767px\"\n\nconst Texts = ({ texts, index }) => {\n  const definedTextKeys = texts.slots\n    .split(',').map(key => key.trim())\n    .filter((key) => key.startsWith('text'));\n  return definedTextKeys.map((data) => texts[`${data}${index}`]);\n};\n\nconst SwiperContent = ({\n  textKeys,\n  heading,\n  image,\n  imageStyle,\n  buttons,\n  props,\n  backgroundColor,\n  index,\n  slideTheme,\n  theme,\n  centerAlignament,\n  isCenter,\n  videoArr,\n}) => {\n  return (\n    <div\n      className={classNames(`spectrum--${slideTheme ? slideTheme : theme}`)}\n      css={css`\n        display: flex;\n        ${backgroundColor}\n        margin-bottom: var(--spectrum-global-dimension-size-500);\n        flex-direction: row;\n\n        @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n          flex-direction: column;\n          max-width: calc(${layoutColumns(6)}) !important;\n        }\n\n        @media screen and (max-width: ${MIN_MOBILE_SCREEN_WIDTH}) {\n          max-width: calc(${layoutColumns(3.5)}) !important;\n          padding-left: var(--spectrum-global-dimension-size-200);\n        }        \n\n      `}\n    >\n      {image ? (\n        <div\n          css={css`\n            flex: 1;\n            justify-content: center;\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              margin: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              margin: 0;\n              max-width: calc(${layoutColumns(3.5)}) !important;\n              // margin-bottom: var(--spectrum-global-dimension-size-200);  \n            }\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              max-width: calc(${layoutColumns(6)}) !important;\n              margin: 0;\n              // margin-bottom: var(--spectrum-global-dimension-size-200);\n            }\n\n          `}\n        >\n          <h2>\n            {videoArr.length ? \n            <video name=\"media3\" loop=\"true\" muted=\"true\" autoPlay playsInline css={css`\n            height:auto;\n            width:500px;\n            `}>\n              <source src={videoArr[index]} type=\"video/mp4\" />\n            </video> \n            : <HeroImage image={image} styles={imageStyle} />}\n          </h2>\n        </div>\n      ) : null}\n\n      {textKeys.length > 0 || heading || buttons ? (\n        <div\n          css={css`\n            text-align: left;\n            flex: 1;\n            padding-bottom: var(--spectrum-global-dimension-size-200);\n            // padding-right:45px;\n            @media only screen and (min-width: ${smallMobileView}) and(max-width:${MOBILE_SCREEN_WIDTH}) {\n              margin: 0;\n              background:red;\n              text-align: center !important;\n              max-width: calc(${layoutColumns(3.5)}) !important;\n              padding-left:  var(--spectrum-global-dimension-size-100) !important;\n            }\n            ${isCenter && centerAlignament}\n          `}\n        >\n          {heading && (\n            <h3\n              className=\"spectrum-Heading--sizeL\"\n              css={css`\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  font-size: 18px !important;\n                }`\n              }>\n              {heading.props.children}\n            </h3>\n          )}\n          {textKeys.length > 0 ?\n            <div\n              className=\"textWrapper\"\n              css={css`\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  &>h3{\n                    font-size: var(--spectrum-alias-heading-xxs-text-size) !important;\n\n                  }\n                }`\n              }\n            >\n              <Texts texts={props} index={index} />\n            </div>\n            : null}\n          {buttons ? (\n            <div\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-200);\n\n                @media only screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                     div:first-child{\n                       justify-content:center !important;\n                     }\n                }\n              `}\n            >\n              <HeroButtons buttons={buttons} />\n            </div>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst Carousel = ({\n  className,\n  image,\n  theme = \"dark\",\n  imageStyle = \"\",\n  swiperSpeed = 600,\n  delay = 2500,\n  enableNavigation = false,\n  varient = \"default\",\n  slideTheme,\n  bulletActiveClass = \"swiper-pagination-bullet-active\",\n  bulletClass = \"swiper-pagination-bullet\",\n  navigationPre = \"swiper-button-prev\",\n  navigationNext = \"swiper-button-next\",\n  isCenter = false,\n  videoArr = [],\n  isVideoCarusel = false,\n  videosLenArr = [],\n  ...props\n}) => {\n  const propKeys = Object.keys(props);\n  let carouselProps = propKeys.filter((key) => key.startsWith(\"image\"));\n\n  carouselProps = carouselProps.map((data, index) => {\n    return {\n      image: props[data],\n      heading: props[`heading${index}`],\n      buttons: props[`buttons${index}`],\n      bgimage: props[`bgimage${index}`]\n    };\n  });\n\n  const textKeys = props.slots.split(\",\").filter((key) => key.trim().startsWith(\"text\"));\n\n  const backgroundColor = `background-color: var(--spectrum-global-color-gray-${slideTheme === \"light\" ? \"50\" : \"\"\n    });`;\n\n  if (varient === \"default\") {\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding: var(--spectrum-global-dimension-size-600) 0\n          var(--spectrum-global-dimension-size-200) 0;\n      `}\n        role=\"button\"\n        tabindex={0}\n        onKeyDown={(e) => {\n          if (e.key === \"ArrowRight\") {\n            const swiperSlide = document.querySelector('.swiper').swiper;\n            swiperSlide.slideNext();\n          }\n          if (e.key === \"ArrowLeft\") {\n            const swiper = document.querySelector('.swiper').swiper;\n            swiper.slidePrev();\n          }\n        }}\n      >\n        <div\n          css={css`\n          max-width: calc(${layoutColumns(12)});\n          margin: auto;\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            max-width: calc(${layoutColumns(2.75)}) !important;\n          }\n          @media screen and (min-width: ${MOBILE_SCREEN_WIDTH})  and (max-width: ${TABLET_SCREEN_WIDTH})  {\n            padding-bottom: 0;\n            margin-top: 0;\n            max-width: calc(${layoutColumns(6)}) !important;\n          }\n\n        `}\n        >\n          <Swiper\n            speed={swiperSpeed}\n            slidesPerView={\"auto\"}\n            autoplay={{\n              delay,\n            }}\n            pagination={{\n              bulletActiveClass,\n              bulletClass,\n              clickable: true,\n            }}\n            navigation={{\n              nextEl: `.${navigationNext}`,\n              prevEl: `.${navigationPre}`,\n            }}\n          >\n            {carouselProps.map((data, index) => {\n              return (\n                <SwiperSlide key={index} { ... (isVideoCarusel && videosLenArr[index] ? {\"data-swiper-autoplay\":`${ videosLenArr[index]}`} :\"\" )}>\n                  <SwiperContent\n                    textKeys={textKeys}\n                    heading={data.heading}\n                    image={data.image}\n                    imageStyle={imageStyle}\n                    buttons={data.buttons}\n                    props={props}\n                    backgroundColor={backgroundColor}\n                    index={index}\n                    slideTheme={slideTheme}\n                    theme={theme}\n                    videoArr={videoArr}\n                  />\n                  {enableNavigation ? (\n                    <>\n                      <div className={navigationPre}></div>\n                      <div className={navigationNext} ></div>\n                    </>\n                  ) : null}\n                </SwiperSlide>\n              );\n            })}\n          </Swiper>\n        </div>\n      </section>\n    );\n  } else if (varient === 'fullWidth') {\n    let centerAlignament = \"margin:auto\"\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n        background: var(--spectrum-global-color-gray-100);\n        padding: var(--spectrum-global-dimension-size-600) 0 var(--spectrum-global-dimension-size-200) 0;\n      `}\n        role=\"button\"\n        tabindex={0}\n        onKeyDown={(e) => {\n          if (e.key === \"ArrowRight\") {\n            const swiper = document.querySelector('.swiper').swiper;\n            swiper.slideNext();\n          }\n          if (e.key === \"ArrowLeft\") {\n            const swiper = document.querySelector('.swiper').swiper;\n            swiper.slidePrev();\n          }\n        }}\n      >\n        <Swiper\n          speed={swiperSpeed}\n          slidesPerView={\"auto\"}\n          autoplay={{\n            delay,\n          }}\n          pagination={{\n            bulletActiveClass,\n            bulletClass,\n            clickable: true,\n          }}\n          navigation={{\n            nextEl: `.${navigationNext}`,\n            prevEl: `.${navigationPre}`,\n          }}\n        >\n          {carouselProps.map((data, index) => {\n            return (\n              <SwiperSlide key={index}  >\n                <div css={css`\n                   width:100%;\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    width:100% !important;\n                  }\n                `} className={data.bgimage.props?.children}>\n                  <div\n                    css={css`\n                  max-width: calc(${layoutColumns(12)});\n                  margin: auto;\n\n                  // @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  //   max-width: calc(${layoutColumns(2.75)}) !important;\n                  // }\n                  \n                  @media screen and (min-width: ${MOBILE_SCREEN_WIDTH})  and (max-width: ${TABLET_SCREEN_WIDTH})  {\n                    max-width: calc(${layoutColumns(6)});\n                  }\n                `}>\n                    <SwiperContent\n                      textKeys={textKeys}\n                      heading={data.heading}\n                      image={data.image}\n                      imageStyle={imageStyle}\n                      buttons={data.buttons}\n                      props={props}\n                      videoArr={videoArr[index]}\n                      backgroundColor={backgroundColor}\n                      index={index}\n                      slideTheme={slideTheme}\n                      theme={theme}\n                      isCenter={isCenter}\n                      centerAlignament={centerAlignament}\n                    />\n                    {enableNavigation ? (\n                      <div >\n                        <div className={navigationPre}></div>\n                        <div className={navigationNext} ></div>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </SwiperSlide>\n            );\n          })}\n        </Swiper>\n      </section>\n    )\n  }\n};\n\nCarousel.propTypes = {\n  className: PropTypes.string,\n  theme: PropTypes.oneOf([\"light\", \"dark\", \"lightest\"]),\n  imageStyle: PropTypes.string,\n  swiperSpeed: PropTypes.number,\n  delay: PropTypes.number,\n  enableNavigation: PropTypes.bool,\n  slideTheme: PropTypes.oneOf([\"light\", \"dark\"]),\n  bulletActiveClass: PropTypes.string,\n  bulletClass: PropTypes.string,\n  navigationNext: PropTypes.string,\n  navigationPre: PropTypes.string,\n  isCenter: PropTypes.bool,\n  varient: PropTypes.string,\n  videoArr: PropTypes.array,\n  isVideoCarusel : PropTypes.bool,\n  videosLenArr : PropTypes.array,\n};\n\nexport { Carousel };"],"names":["SwiperCore","Autoplay","Pagination","Navigation","Texts","_ref4","texts","index","slots","split","map","key","trim","filter","startsWith","data","_ref3","name","styles","SwiperContent","_ref5","textKeys","heading","image","imageStyle","buttons","props","backgroundColor","slideTheme","theme","centerAlignament","isCenter","videoArr","___EmotionJSX","className","classNames","css","TABLET_SCREEN_WIDTH","layoutColumns","DESKTOP_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","length","loop","muted","autoPlay","playsInline","src","type","HeroImage","children","HeroButtons","_ref","_ref2","Carousel","_ref6","swiperSpeed","delay","enableNavigation","varient","bulletActiveClass","bulletClass","navigationPre","navigationNext","isVideoCarusel","videosLenArr","_objectWithoutProperties","_excluded","carouselProps","Object","keys","bgimage","role","tabindex","onKeyDown","e","document","querySelector","swiper","slideNext","slidePrev","Swiper","speed","slidesPerView","autoplay","pagination","clickable","navigation","nextEl","prevEl","SwiperSlide","_extends","React","_data$bgimage$props"],"sourceRoot":""}