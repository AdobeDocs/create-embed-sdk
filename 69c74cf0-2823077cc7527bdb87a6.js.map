{"version":3,"file":"69c74cf0-2823077cc7527bdb87a6.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/components/AnimationTextBlock.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { cloneElement, useEffect, useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { HeroButtons } from \"@adobe/gatsby-theme-aio/src/components/Hero\";\nimport { Media } from \"@adobe/gatsby-theme-aio/src/components/Media\";\nimport PropTypes from \"prop-types\";\nimport {\n  layoutColumns,\n  DESKTOP_SCREEN_WIDTH,\n  TABLET_SCREEN_WIDTH\n} from \"@adobe/gatsby-theme-aio/src/utils\";\nimport classNames from \"classnames\";\nimport \"@spectrum-css/typography\";\nimport SpringImage from './springweb'\n\nconst counter = {\n  2: 0,\n  3: 0,\n  4: 0,\n};\n\nconst MIN_TABLET_SCREEN_WIDTH = '1023px'\n\nconst mediaCSS = css`\n  & {\n    display: inline;\n    width: ${layoutColumns(6)};\n    box-sizing: border-box;\n    padding: var(--spectrum-global-dimension-size-200);\n\n    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n      display: block;\n      width: 100%;\n    }\n  }\n`;\n\nconst Icons = ({ icons, isCentered }) =>\n  icons\n    ? cloneElement(icons, {\n      css: css`\n          list-style: none;\n          padding: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-400) !important;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n\n          & li {\n            display: flex;\n            border-right: 1px solid var(--spectrum-global-color-gray-300);\n            height: var(--spectrum-global-dimension-size-600);\n            margin-right: var(--spectrum-global-dimension-size-150);\n          }\n\n          & li:last-of-type {\n            padding-right: 0;\n            border-right: none;\n          }\n\n          .gatsby-resp-image-wrapper {\n            position: relative;\n            width: var(--spectrum-global-dimension-size-800) !important;\n          }\n\n          .gatsby-resp-image-image {\n            position: absolute;\n            top: 0;\n            left: 0;\n            height: 100%;\n            object-fit: contain;\n          }\n        `,\n    })\n    : null;\n\nconst Links = ({ links, isCentered, isLinksGroups = false }) =>\n  links\n    ? cloneElement(links, {\n      css: css`\n          list-style: none;\n          padding: 0;\n          display: flex;\n          justify-content: ${isCentered ? \"center\" : \"flex-start\"};\n          ${!isLinksGroups ? \"\" : \"flex-wrap: wrap;\"}\n          margin-top: ${isCentered || isLinksGroups\n          ? \"var(--spectrum-global-dimension-size-200) !important;\"\n          : \"var(--spectrum-global-dimension-size-600) !important;\"};\n          & li {\n            display: flex;\n            align-items: center;\n            ${isLinksGroups\n          ? `border-radius: 10px; \n                border:solid 1.8px;\n                margin-right: var(--spectrum-global-dimension-size-200);\n                height: var(--spectrum-global-dimension-size-300);\n                margin-top: var(--spectrum-global-dimension-size-100);\n                background-color: #F7F7F7;\n                `\n          : \"height: var(--spectrum-global-dimension-size-400)\"};\n          }\n\n          & li a {\n            white-space: nowrap;           \n            ${isLinksGroups\n          ? `margin: var(--spectrum-global-dimension-size-100); \n              color: currentColor;\n              text-decoration: none;\n              font-size: var(--spectrum-global-dimension-size-175);`\n          : \"margin-right: var(--spectrum-global-dimension-size-600);\"};\n          }\n\n          & li:last-of-type a {\n            margin-right: ${isLinksGroups ? \"var(--spectrum-global-dimension-size-100)\" : \"0\"}\n          }\n\n          & li:hover{\n            ${isLinksGroups ?\n          `background-color: var(--spectrum-button-primary-m-background-color-hover, var(--spectrum-global-color-gray-800));\n            border-color: var(--spectrum-button-primary-m-border-color-hover, var(--spectrum-global-color-gray-800));            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));`\n          : \"\"}\n          }        \n          & li:hover a{\n            ${isLinksGroups ? `\n            color: var(--spectrum-button-primary-m-text-color-hover, var(--spectrum-global-color-gray-50));\n            text-decoration: none;`\n          : \"\"}\n          }\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-wrapper {\n            width: var(--spectrum-global-dimension-size-400) !important;\n            margin-left: 0 !important;\n            margin-right: var(--spectrum-global-dimension-size-150) !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: contain;\n          }\n          \n          @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n            flex-direction: ${isLinksGroups ? \"initial\" : \"column\"};\n            align-items: ${isCentered ? \"center\" : \"left\"};          \n\n            li {\n              margin-top: var(--spectrum-global-dimension-size-100);              \n            }\n\n            li a {\n              ${isLinksGroups\n          ? \"font-size: var(--spectrum-global-dimension-size-130);` \"\n          : `margin-right: 0;`\n        }\n            }\n          }\n\n          @media screen and (max-width: 767px) {\n            ${isLinksGroups ? `width: min-content` : \"\"}\n          }\n        `,\n    })\n    : null;\n\nconst AnimationTextBlock = ({\n  className,\n  heading,\n  subHeading,\n  textcontent,\n  links,\n  buttons,\n  buttonArray,\n  linksGroups,\n  icons,\n  image,\n  assetImg,\n  video,\n  theme = \"lightest\",\n  width = \"100%\",\n  isCentered = false,\n  primaryOutline = false,\n  headerElementType = \"h3\",\n  imageOnly = false,\n  imgWidth = \"50%\",\n  isPrimaryBtn = false,\n  variantsTypePrimary = 'accent',\n  variantsTypeSecondary = 'secondary',\n  variantStyleFill = \"fill\",\n  variantStyleOutline = \"outline\",\n  hasCodeBlock = false,\n  homeZigZag = false,\n  isbuttonGroups = false,\n  imagearray = [],\n  videoSrcUrl = \"\",\n  isVideoReversed = false,\n  ...props\n}) => {\n  const Element = headerElementType;\n\n  let initColumns = 100 / parseFloat(width);\n\n  if (width === \"33%\") {\n    width = `${(100 / 3).toFixed(2)}%`;\n    initColumns = 3;\n  }\n\n  const [columns] = useState(initColumns);\n\n  useEffect(() => {\n    return () => {\n      if (typeof counter[columns] !== \"undefined\") {\n        counter[columns]--;\n      }\n    };\n  }, [columns]);\n\n  if (width !== \"100%\") {\n    isCentered = true;\n  }\n\n  const isReversed =\n    props.slots.endsWith(\"image\") || props.slots.endsWith(\"video\") || isVideoReversed;\n  return (\n    <section\n      className={classNames(className, `spectrum--${theme}`)}\n      css={css`\n          width: 100%;\n          background: var(--spectrum-global-color-gray-100);\n        `}\n    >\n      <div\n        css={css`\n            width: ${DESKTOP_SCREEN_WIDTH};\n            box-sizing: border-box;\n            margin: auto;\n            padding: var(--spectrum-global-dimension-size-1000) 0;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              width: 100%;\n\n              // & > div {\n              //   flex-direction: column !important;\n              // }\n            }\n          `}\n      >\n        <div\n          css={css`\n              display: flex;\n              align-items: center;\n              flex-direction: ${imageOnly\n              ? \"column\"\n              : isReversed\n                ? \"row-reverse\"\n                : \"row\"};\n\n              @media screen and (max-width: ${MIN_TABLET_SCREEN_WIDTH}) {\n                flex-direction: column;\n              }\n            `}\n        >\n          {imagearray.length > 0 &&\n            <p className=\"spectrum-Body spectrum-Body--sizeM css-1wz4ws2-css-Paragraph\"><span className=\"gatsby-resp-image-wrapper\" >\n              <span className=\"gatsby-resp-image-background-image quickActionCodeSnippetBGImg\" ></span>\n              <picture style={{ display: \"none\" }}>\n                <img className=\"gatsby-resp-image-image\" src={image} alt=\"EMPTY_ALT\" title=\"EMPTY_ALT\" loading=\"lazy\" />\n              </picture>\n            </span>\n              <SpringImage slides={imagearray} />\n            </p>\n          }\n\n          {video && <Media css={mediaCSS} video={video} />}\n\n          {videoSrcUrl !== \"\" &&\n            <div className=\"reizeQuickActionVideo\">\n              <video name=\"media_resize\" id=\"resize_Quick_Action_Id\" loop className=\"resizeQuickActionViedo\" type=\"video/mp4\" preload=\"auto\" autoPlay muted playsInline>\n                <source src={videoSrcUrl} type=\"video/mp4\" />\n              </video>\n            </div>\n          }\n          {!imageOnly && <div\n            css={css`\n                ${hasCodeBlock ? `width: 70%;` : `width: 50%;`}\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                text-align: left;\n                box-sizing: border-box;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: var(--spectrum-global-dimension-size-400) 0;\n                }\n              `}\n          >\n            <Icons icons={icons} isCentered={isCentered} />\n\n            {heading && (\n              <Element\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                    margin-top: 0 !important;\n                    margin-bottom: var(\n                      --spectrum-global-dimension-size-200\n                    ) !important;\n\n                    & + p {\n                      margin-top: 0 !important;\n                    }\n                  `}\n              >\n                {heading}\n              </Element>\n            )}\n            {subHeading && !linksGroups && (\n              <h3\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                font-size: var(\n                  --spectrum-global-dimension-size-225\n                ) !important;\n                  margin-bottom: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading}\n              </h3>\n            )}\n            <p class=\"spectrum-Body spectrum-Body--sizeM css-tq6n67-Paragraph\">{textcontent}</p>\n\n            <div css={css`\n            display: flex;\n            flex-direction: row;\n            text-align: left;\n            box-sizing: border-box;\n            padding:5% 0;\n            gap:5%;\n          `}>\n              {buttonArray?.map((data) => {\n                return (\n                  <a href={data.link} rel=\"noreferrer\" target=\"_blank\" style={{ textDecoration: \"none\" }}>\n                    <button class=\"spectrum-Button spectrum-Button--sizeM spectrum-Button--outline spectrum-Button--accent\" >\n                      <span class=\"spectrum-Button-label\">{data.label}</span>\n                    </button>\n                  </a>\n                )\n              })}\n            </div>\n\n            {subHeading && linksGroups && (\n              <h3\n                className=\"spectrum-Heading spectrum-Heading--sizeM\"\n                css={css`\n                  font-size: var(\n                    --spectrum-global-dimension-size-225\n                  ) !important;                  \n                  margin-top: var(\n                    --spectrum-global-dimension-size-200\n                  ) !important;\n\n                  & ~ p {\n                    margin-top: 0;\n                    margin-bottom: 0 !important;\n                  }\n                `}\n              >\n                {subHeading.props.children}\n              </h3>\n            )}\n\n            {linksGroups && (\n              <Links links={linksGroups} isCentered={isCentered} isLinksGroups />\n            )}\n\n            <HeroButtons\n              buttons={buttons}\n              styles={[variantStyleFill, variantStyleOutline]}\n              variants={[variantsTypePrimary, variantsTypeSecondary]}\n              heading={homeZigZag ? heading?.props?.children : ''}\n              css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                `}\n            />\n\n            <Links links={links} isCentered={isCentered} />\n          </div>}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nAnimationTextBlock.propTypes = {\n  heading: PropTypes.string,\n  links: PropTypes.element,\n  icons: PropTypes.element,\n  buttons: PropTypes.element,\n  linksGroups: PropTypes.element,\n  image: PropTypes.string,\n  buttonArray: PropTypes.array,\n  video: PropTypes.element,\n  theme: PropTypes.string,\n  width: PropTypes.oneOf([\"100%\", \"50%\", \"33%\", \"25%\"]),\n  isCentered: PropTypes.bool,\n  headerElementType: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n  imageOnly: PropTypes.bool,\n  primaryOutline: PropTypes.bool,\n  hasCodeBlock: PropTypes.bool,\n  imgWidth: PropTypes.string,\n  homeZigZag: PropTypes.bool,\n  isbuttonGroups: PropTypes.bool,\n  imagearray: PropTypes.array,\n  videoSrcUrl: PropTypes.string,\n  isVideoReversed: PropTypes.bool\n};\n\nexport { AnimationTextBlock };\n"],"names":["counter","mediaCSS","css","layoutColumns","TABLET_SCREEN_WIDTH","Icons","_ref7","icons","isCentered","cloneElement","Links","_ref8","links","isLinksGroups","_ref","name","styles","_ref2","_ref3","_ref4","_ref5","_ref6","AnimationTextBlock","_ref9","_heading$props","className","heading","subHeading","textcontent","buttons","buttonArray","linksGroups","image","assetImg","video","theme","width","primaryOutline","headerElementType","imageOnly","imgWidth","isPrimaryBtn","variantsTypePrimary","variantsTypeSecondary","variantStyleFill","variantStyleOutline","hasCodeBlock","homeZigZag","isbuttonGroups","imagearray","videoSrcUrl","isVideoReversed","props","_objectWithoutProperties","_excluded","Element","initColumns","parseFloat","toFixed","columns","useState","useEffect","isReversed","slots","endsWith","___EmotionJSX","classNames","DESKTOP_SCREEN_WIDTH","length","style","display","src","alt","title","loading","SpringImage","slides","Media","id","loop","type","preload","autoPlay","muted","playsInline","class","map","data","href","link","rel","target","textDecoration","label","children","HeroButtons","variants"],"sourceRoot":""}